// Generated by Xata Codegen 0.30.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "brands",
    checkConstraints: {
      brands_xata_id_length_xata_id: {
        name: "brands_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_brands_xata_id_key: {
        name: "_pgroll_new_brands_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "name",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "slug ",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "categories",
    checkConstraints: {
      Categories_xata_id_length_xata_id: {
        name: "Categories_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_Categories_xata_id_key: {
        name: "_pgroll_new_Categories_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "name",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "slug",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "discounts",
    checkConstraints: {
      Discounts_xata_id_length_xata_id: {
        name: "Discounts_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_Discounts_xata_id_key: {
        name: "_pgroll_new_Discounts_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "code",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "expiresAt",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "percentage",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "products",
    checkConstraints: {
      Products_xata_id_length_xata_id: {
        name: "Products_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      Discount_link: {
        name: "Discount_link",
        columns: ["discount"],
        referencedTable: "discounts",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      brand_link: {
        name: "brand_link",
        columns: ["brand"],
        referencedTable: "brands",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      category_link: {
        name: "category_link",
        columns: ["category"],
        referencedTable: "categories",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      "subcategory _link": {
        name: "subcategory _link",
        columns: ["subcategory "],
        referencedTable: "subcategories",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_Products_xata_id_key: {
        name: "_pgroll_new_Products_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "brand",
        type: "link",
        link: { table: "brands" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"brands"}',
      },
      {
        name: "category",
        type: "link",
        link: { table: "categories" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"categories"}',
      },
      {
        name: "description ",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "discount",
        type: "link",
        link: { table: "discounts" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"discounts"}',
      },
      {
        name: "imageUrl",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "price",
        type: "float",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "stock ",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "subcategory ",
        type: "link",
        link: { table: "subcategories" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"subcategories"}',
      },
      {
        name: "title",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "subcategories",
    checkConstraints: {
      subcategories_xata_id_length_xata_id: {
        name: "subcategories_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      Category_link: {
        name: "Category_link",
        columns: ["category"],
        referencedTable: "categories",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_subcategories_xata_id_key: {
        name: "_pgroll_new_subcategories_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "category",
        type: "link",
        link: { table: "categories" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"categories"}',
      },
      {
        name: "slug",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "title",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Brands = InferredTypes["brands"];
export type BrandsRecord = Brands & XataRecord;

export type Categories = InferredTypes["categories"];
export type CategoriesRecord = Categories & XataRecord;

export type Discounts = InferredTypes["discounts"];
export type DiscountsRecord = Discounts & XataRecord;

export type Products = InferredTypes["products"];
export type ProductsRecord = Products & XataRecord;

export type Subcategories = InferredTypes["subcategories"];
export type SubcategoriesRecord = Subcategories & XataRecord;

export type DatabaseSchema = {
  brands: BrandsRecord;
  categories: CategoriesRecord;
  discounts: DiscountsRecord;
  products: ProductsRecord;
  subcategories: SubcategoriesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Sahar-Javadi-s-workspace-pcnfvc.eu-west-1.xata.sh/db/cosmetics-shop",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
